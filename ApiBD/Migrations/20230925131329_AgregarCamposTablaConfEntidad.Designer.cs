// <auto-generated />
using System;
using ApiBD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiBD.Migrations
{
    [DbContext(typeof(CentralParkingContext))]
    [Migration("20230925131329_AgregarCamposTablaConfEntidad")]
    partial class AgregarCamposTablaConfEntidad
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("ApiBD.Models.TbConfBanco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Banco")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("banco");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_banco", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfBotone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("BtnClase")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("btnClase");

                    b.Property<string>("BtnRuta")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("btnRuta");

                    b.Property<string>("BtnTitulo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("btnTitulo");

                    b.Property<string>("Icono")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("icono");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int(11)")
                        .HasColumnName("menu_id");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)")
                        .HasColumnName("orden");

                    b.Property<int?>("PaginadetId")
                        .HasColumnType("int(11)")
                        .HasColumnName("paginadet_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_botones", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfDocelectronico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("DocumentoElectronico")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("documentoElectronico");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_docelectronico", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfEntidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Celular")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("celular");

                    b.Property<string>("ClaveNotifica")
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("correo");

                    b.Property<string>("CorreoConCopia")
                        .HasColumnType("longtext");

                    b.Property<string>("CorreoNotifica")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("direccion");

                    b.Property<string>("Favicon")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("favicon");

                    b.Property<string>("Horario")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("horario");

                    b.Property<string>("LogoBlanco")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("logoBlanco");

                    b.Property<string>("LogoMini")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("logoMini");

                    b.Property<string>("LogoOscuro")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("logoOscuro");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name");

                    b.Property<string>("NameComercial")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nameComercial");

                    b.Property<int>("Puerto")
                        .HasColumnType("int");

                    b.Property<bool?>("RedesSociales")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("redesSociales");

                    b.Property<string>("Ruc")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("ruc");

                    b.Property<string>("RutaPagWeb")
                        .HasColumnType("text")
                        .HasColumnName("rutaPagWeb");

                    b.Property<string>("Server")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_entidad", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int?>("Acceso")
                        .HasColumnType("int(11)")
                        .HasColumnName("acceso");

                    b.Property<int?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("Idtipomenu")
                        .HasColumnType("int(11)")
                        .HasColumnName("idtipomenu");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int?>("Padre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("padre")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Ruta")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("ruta");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idtipomenu" }, "menu_ibfk_1");

                    b.ToTable("tb_conf_menu", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfModalcab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("BtnRuta")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("btn_ruta");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)")
                        .HasColumnName("estado");

                    b.Property<int?>("IdDetallePie")
                        .HasColumnType("int(11)")
                        .HasColumnName("idDetallePie");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_modalcab", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfModaldet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Link")
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<int?>("ModalcabId")
                        .HasColumnType("int(11)")
                        .HasColumnName("modalcab_id");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_modaldet", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfMonedum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Moneda")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("moneda");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_moneda", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfPaginascab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("ImagenMision")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("imagenMision");

                    b.Property<string>("ImagenValores")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("imagenValores");

                    b.Property<string>("MisionDetalle")
                        .HasColumnType("text")
                        .HasColumnName("misionDetalle");

                    b.Property<string>("MisionTitulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("misionTitulo");

                    b.Property<string>("ReconocDetalle")
                        .HasColumnType("text")
                        .HasColumnName("reconocDetalle");

                    b.Property<string>("ReconocTitulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("reconocTitulo");

                    b.Property<string>("ReseniaDetalle")
                        .HasColumnType("text")
                        .HasColumnName("reseniaDetalle");

                    b.Property<string>("ReseniaTitulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("reseniaTitulo");

                    b.Property<string>("Subtitulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("subtitulo");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("titulo");

                    b.Property<string>("ValoresDetalle")
                        .HasColumnType("text")
                        .HasColumnName("valoresDetalle");

                    b.Property<string>("ValoresTitulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("valoresTitulo");

                    b.Property<string>("VisionDetalle")
                        .HasColumnType("text")
                        .HasColumnName("visionDetalle");

                    b.Property<string>("VisionTitulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("visionTitulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_paginascab", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfPaginasdet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Detalle")
                        .HasColumnType("text")
                        .HasColumnName("detalle");

                    b.Property<string>("Imagen")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("imagen");

                    b.Property<int?>("PaginaId")
                        .HasColumnType("int(11)")
                        .HasColumnName("pagina_id");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_paginasdet", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfPermiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Creacion")
                        .HasColumnType("datetime")
                        .HasColumnName("creacion");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<int?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int(11)")
                        .HasColumnName("menu_id");

                    b.Property<DateTime?>("Modificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("modificacion");

                    b.Property<string>("Permiso")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("permiso");

                    b.Property<int?>("RolId")
                        .HasColumnType("int(11)")
                        .HasColumnName("rol_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MenuId" }, "permisos_ibfk_1");

                    b.HasIndex(new[] { "RolId" }, "permisos_ibfk_2");

                    b.ToTable("tb_conf_permisos", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("ApMaterno")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ApPaterno")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("cargo");

                    b.Property<string>("Celular")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("celular");

                    b.Property<string>("CodDistrito")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("codDistrito");

                    b.Property<string>("CodPostal")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("codPostal");

                    b.Property<int?>("CodRubro")
                        .HasColumnType("int(11)")
                        .HasColumnName("codRubro");

                    b.Property<string>("Correo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Dni")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("dni");

                    b.Property<string>("Fax")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Nombres")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Ruc")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("ruc");

                    b.Property<string>("Telefono")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("TipoPersona")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tipoPersona")
                        .HasComment("N: Natural, J:Juridica");

                    b.Property<int?>("TipoRegistro")
                        .HasColumnType("int(11)")
                        .HasColumnName("tipoRegistro")
                        .HasComment("1:Solicitante,2:InforFiscal,3:RepresLegal,4:ContactoComer,5:Cobranza");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CodDistrito" }, "codDistrito");

                    b.ToTable("tb_conf_personas", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfPiepaginacab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)")
                        .HasColumnName("estado");

                    b.Property<string>("Imagen")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("imagen");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)")
                        .HasColumnName("orden");

                    b.Property<string>("Titulo")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_piepaginacab", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfPiepaginadet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Icono")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icono");

                    b.Property<string>("Imagen")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("imagen");

                    b.Property<int?>("PiepaginaId")
                        .HasColumnType("int(11)")
                        .HasColumnName("piepagina_id");

                    b.Property<string>("Ruta")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ruta");

                    b.Property<int?>("TipoRuta")
                        .HasColumnType("int(11)")
                        .HasColumnName("tipo_ruta")
                        .HasComment("1: Link nueva pestaña; 2: Modal");

                    b.Property<string>("Titulo")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_piepaginadet", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Creacion")
                        .HasColumnType("datetime")
                        .HasColumnName("creacion");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descripcion");

                    b.Property<int?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("Modificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("modificacion");

                    b.Property<int?>("PermisoId")
                        .HasColumnType("int(11)")
                        .HasColumnName("permiso_id");

                    b.Property<string>("Rol")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("rol");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_roles", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfRubro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Rubro")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("rubro");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_rubros", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfTimepago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("TimePago")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("timePago");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_timepago", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfTipomenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Opcion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("opcion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_tipomenu", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfTipopago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("TipoPago")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipoPago");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_conf_tipopago", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfUbigeo", b =>
                {
                    b.Property<string>("CodUbi")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("codUbi");

                    b.Property<string>("Dist")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dist");

                    b.Property<string>("Dpto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dpto");

                    b.Property<string>("Prov")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("prov");

                    b.HasIndex(new[] { "CodUbi" }, "codUbi");

                    b.ToTable("tb_conf_ubigeo", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfUser", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<bool?>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<string>("Amaterno")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("amaterno");

                    b.Property<string>("Apaterno")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("apaterno");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<ulong?>("CurrentTeamId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("current_team_id");

                    b.Property<string>("Dni")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("EmailVerifiedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("email_verified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("ProfilePhotoPath")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)")
                        .HasColumnName("profile_photo_path");

                    b.Property<string>("RememberToken")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remember_token");

                    b.Property<int?>("RolId")
                        .HasColumnType("int(11)")
                        .HasColumnName("rol_id");

                    b.Property<DateTime?>("TwoFactorConfirmedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("two_factor_confirmed_at");

                    b.Property<string>("TwoFactorRecoveryCodes")
                        .HasColumnType("text")
                        .HasColumnName("two_factor_recovery_codes");

                    b.Property<string>("TwoFactorSecret")
                        .HasColumnType("text")
                        .HasColumnName("two_factor_secret");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RolId" }, "users_ibfk_1");

                    b.ToTable("tb_conf_users", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_unicode_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbFormContactano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Asunto")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("asunto");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correoElectronico");

                    b.Property<string>("Mensaje")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("mensaje");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<int?>("TipoServicio")
                        .HasColumnType("int(11)")
                        .HasColumnName("tipoServicio");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TipoServicio" }, "FK_FormContactanos_IndServicioDet");

                    b.ToTable("tb_form_contactanos", (string)null);
                });

            modelBuilder.Entity("ApiBD.Models.TbFormCotizano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Celular")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("celular");

                    b.Property<string>("Comentario")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("comentario");

                    b.Property<string>("Contacto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contacto");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correoElectronico");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion");

                    b.Property<string>("Distrito")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("distrito");

                    b.Property<DateTime?>("FechaEvento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEvento");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Ruc")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("ruc");

                    b.Property<string>("Telefono")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("telefono");

                    b.Property<int?>("TipoServicio")
                        .HasColumnType("int(11)")
                        .HasColumnName("tipoServicio");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TipoServicio" }, "FK_FormCotizanos_ServicioCabecera");

                    b.ToTable("tb_form_cotizanos", (string)null);
                });

            modelBuilder.Entity("ApiBD.Models.TbFormHojareclamacione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Apellido")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("apellido");

                    b.Property<string>("Correo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("correo");

                    b.Property<string>("Departamento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("departamento");

                    b.Property<string>("Detalle")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("detalle");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion");

                    b.Property<string>("Distrito")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("distrito");

                    b.Property<string>("Estacionamiento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("estacionamiento");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("Fechaindicente")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaindicente");

                    b.Property<sbyte?>("Menordeedad")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("menordeedad");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Numerodocumento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("numerodocumento");

                    b.Property<string>("Provincia")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("provincia");

                    b.Property<string>("Reclamo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reclamo");

                    b.Property<string>("Telefono")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("telefono");

                    b.Property<string>("Tipodocumento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tipodocumento");

                    b.Property<string>("Tiposervicio")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tiposervicio");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_form_hojareclamaciones", (string)null);
                });

            modelBuilder.Entity("ApiBD.Models.TbFormParkingcard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("CodSeguridad")
                        .HasMaxLength(20)
                        .HasColumnType("char(20)")
                        .HasColumnName("codSeguridad")
                        .IsFixedLength()
                        .HasComment("codigo de seguridad aleatorio que genera el sistema de 20 caracteres");

                    b.Property<string>("Correo")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("correo")
                        .HasComment("correo del usuario");

                    b.Property<string>("Dni")
                        .HasMaxLength(8)
                        .HasColumnType("char(8)")
                        .HasColumnName("dni")
                        .IsFixedLength()
                        .HasComment("dni del usuario");

                    b.Property<DateTime?>("FecRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fecRegistro")
                        .HasComment("fecha actual de registro");

                    b.Property<int?>("Notificado")
                        .HasColumnType("int(11)")
                        .HasColumnName("notificado")
                        .HasComment("valida si esta notificacion fue verificado");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_form_parkingcard", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbFormProveedore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool?>("AfectoDetraccionDeIgv")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("afectoDetraccionDeIGV");

                    b.Property<bool?>("AfectoRentade4taCategoría")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("AfectoRetencionDeIgv")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("afectoRetencionDeIGV");

                    b.Property<string>("CcCargo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cc_cargo");

                    b.Property<string>("CcCelular")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cc_celular");

                    b.Property<string>("CcEmail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cc_email");

                    b.Property<string>("CcNombre")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cc_nombre");

                    b.Property<string>("CcTelefono")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cc_telefono");

                    b.Property<string>("CcobranzaCargo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ccobranza_cargo");

                    b.Property<string>("CcobranzaCelular")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ccobranza_celular");

                    b.Property<string>("CcobranzaEmail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ccobranza_email");

                    b.Property<string>("CcobranzaNombre")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ccobranza_nombre");

                    b.Property<string>("CcobranzaTelefono")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ccobranza_telefono");

                    b.Property<int?>("CodCuentaBancaria")
                        .HasColumnType("int(11)")
                        .HasColumnName("codCuentaBancaria");

                    b.Property<string>("ComprobanteExoneracion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("comprobanteExoneracion");

                    b.Property<string>("CuentaBancaria")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cuentaBancaria");

                    b.Property<string>("CuentaBancariaCci")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cuentaBancariaCCI");

                    b.Property<string>("CuentaBancariaTitular")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cuentaBancariaTitular");

                    b.Property<bool?>("DatosCompraAmbas")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("datosCompraAmbas");

                    b.Property<bool?>("DatosCompraDolares")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("datosCompraDolares");

                    b.Property<bool?>("DatosCompraSoles")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("datosCompraSoles");

                    b.Property<bool?>("Exoneradorenta4ta")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FCodigoPostal")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("f_codigoPostal");

                    b.Property<string>("FDireccion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("f_direccion");

                    b.Property<string>("FDistrito")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("f_distrito");

                    b.Property<string>("FDni")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("f_dni");

                    b.Property<string>("FFax")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("f_fax");

                    b.Property<string>("FNombre")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("f_nombre");

                    b.Property<string>("FRubro")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("f_rubro");

                    b.Property<string>("FRuc")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("f_ruc");

                    b.Property<string>("FTelefono")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("f_telefono");

                    b.Property<int?>("FTipoPersona")
                        .HasColumnType("int(11)")
                        .HasColumnName("f_tipoPersona");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<bool?>("InformacionPagoProveedor30dias")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("informacionPagoProveedor30dias");

                    b.Property<bool?>("InformacionPagoProveedor60dias")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("informacionPagoProveedor60dias");

                    b.Property<bool?>("InformacionPagoProveedorEfectivo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("informacionPagoProveedorEfectivo");

                    b.Property<string>("InformacionPagoProveedorOtros")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("informacionPagoProveedorOtros");

                    b.Property<bool?>("InformacionPagoProveedorTranferenciaBancaria")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("informacionPagoProveedorTranferenciaBancaria");

                    b.Property<double?>("PorcentajeDetraccion")
                        .HasColumnType("double")
                        .HasColumnName("porcentajeDetraccion");

                    b.Property<string>("RlCargo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rl_cargo");

                    b.Property<string>("RlCelular")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rl_celular");

                    b.Property<string>("RlEmail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rl_email");

                    b.Property<string>("RlNombre")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rl_nombre");

                    b.Property<string>("RlTelefono")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rl_telefono");

                    b.Property<string>("SolicitadoPor")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("solicitadoPor");

                    b.Property<bool?>("TipoDocumentoFactura")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("tipoDocumentoFactura");

                    b.Property<bool?>("TipoDocumentoOtros")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("tipoDocumentoOtros");

                    b.Property<bool?>("TipoDocumentoReciboHonorarios")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("tipoDocumentoReciboHonorarios");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CodCuentaBancaria" }, "FK_tipoBanco");

                    b.ToTable("tb_form_proveedores", (string)null);
                });

            modelBuilder.Entity("ApiBD.Models.TbFormServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Celular")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("celular");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("correoElectronico");

                    b.Property<string>("DatosContacto")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("datosContacto");

                    b.Property<string>("DireccionEstacionamiento")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccionEstacionamiento");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("distrito");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Ruc")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ruc");

                    b.Property<string>("Telefono")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("telefono");

                    b.Property<int?>("TipoServicio")
                        .HasColumnType("int(11)")
                        .HasColumnName("tipoServicio");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TipoServicio" }, "FK_FormServicios_IndServicioDet");

                    b.ToTable("tb_form_servicios", (string)null);
                });

            modelBuilder.Entity("ApiBD.Models.TbFormTbcnosotro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Apellido")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("apellido");

                    b.Property<string>("Celular")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("celular");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("correoElectronico");

                    b.Property<string>("Departamento")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("departamento");

                    b.Property<int?>("Distrito")
                        .HasColumnType("int(11)")
                        .HasColumnName("distrito");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaNacimiento");

                    b.Property<string>("InformacionAdicional")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("informacionAdicional");

                    b.Property<string>("Medio")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("medio");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("numeroDocumento");

                    b.Property<string>("Provincia")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("provincia");

                    b.Property<string>("Puesto")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("puesto");

                    b.Property<int?>("TipoDocumento")
                        .HasColumnType("int(11)")
                        .HasColumnName("tipoDocumento");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_form_tbcnosotros", (string)null);
                });

            modelBuilder.Entity("ApiBD.Models.TbIndCaracteristica", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Detalle")
                        .HasColumnType("text");

                    b.Property<string>("Icono")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("icono");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_ind_caracteristica", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbIndRedsocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Clasefoot")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("clasefoot");

                    b.Property<string>("Clasehead")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("clasehead");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("color");

                    b.Property<int?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Icono")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("icono");

                    b.Property<string>("Nombre")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("nombre");

                    b.Property<string>("Ruta")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ruta");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_ind_redsocial", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbIndServiciocab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("ImagenGrande")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("imagenGrande");

                    b.Property<string>("ImagenPeque")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("imagenPeque");

                    b.Property<string>("Ruta")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ruta");

                    b.Property<string>("TituloGrande")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("tituloGrande");

                    b.Property<string>("TituloPeque")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("tituloPeque");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_ind_serviciocab", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbIndServiciodet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Detalle")
                        .HasColumnType("text")
                        .HasColumnName("detalle");

                    b.Property<string>("Icono")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icono");

                    b.Property<int?>("IdCab")
                        .HasColumnType("int(11)")
                        .HasColumnName("idCab");

                    b.Property<string>("Imagen")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("imagen");

                    b.Property<string>("Ruta")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ruta");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCab" }, "indexserviciodet_ibfk_1");

                    b.ToTable("tb_ind_serviciodet", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbIndSlidecab", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("id");

                    b.Property<int?>("IdBtn1")
                        .HasColumnType("int(11)")
                        .HasColumnName("idBtn1");

                    b.Property<string>("Imagen")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("imagen");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdBtn1" }, "idBtn1");

                    b.ToTable("tb_ind_slidecab", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbNosCabecera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_nos_cabecera", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbNosDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Detalle")
                        .HasColumnType("text")
                        .HasColumnName("detalle");

                    b.Property<int?>("Espacio")
                        .HasColumnType("int(11)")
                        .HasColumnName("espacio");

                    b.Property<string>("Icono")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("icono");

                    b.Property<string>("Imagen")
                        .HasColumnType("text")
                        .HasColumnName("imagen");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_nos_detalle", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbProvRegistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int?>("AfectoDetraccionIgv")
                        .HasColumnType("int(11)")
                        .HasColumnName("AfectoDetraccionIGV");

                    b.Property<int?>("AfectoRenta4taCat")
                        .HasColumnType("int(11)");

                    b.Property<int?>("AfectoRetencionIgv")
                        .HasColumnType("int(11)")
                        .HasColumnName("AfectoRetencionIGV");

                    b.Property<string>("Cci")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CCI");

                    b.Property<int?>("CodBanco")
                        .HasColumnType("int(11)")
                        .HasColumnName("codBanco");

                    b.Property<int?>("CodPersonaCobranza")
                        .HasColumnType("int(11)")
                        .HasColumnName("codPersonaCobranza");

                    b.Property<int?>("CodPersonaContactoComercial")
                        .HasColumnType("int(11)")
                        .HasColumnName("codPersonaContactoComercial");

                    b.Property<int?>("CodPersonaInforFiscal")
                        .HasColumnType("int(11)")
                        .HasColumnName("codPersonaInforFiscal");

                    b.Property<int?>("CodPersonaRepLegal")
                        .HasColumnType("int(11)")
                        .HasColumnName("codPersonaRepLegal");

                    b.Property<int?>("CodPersonaSolicita")
                        .HasColumnType("int(11)")
                        .HasColumnName("codPersonaSolicita");

                    b.Property<string>("ComprobanteExonera")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("ExoneradoRenta4taCat")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("NroCuenta")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OtroTiempoPago")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("otroTiempoPago");

                    b.Property<int?>("PorcentajeDetraccion")
                        .HasColumnType("int(11)");

                    b.Property<int?>("TiempoPago")
                        .HasColumnType("int(11)")
                        .HasColumnName("tiempoPago");

                    b.Property<int?>("TipoDocElectronicoRemite")
                        .HasColumnType("int(11)")
                        .HasColumnName("tipoDocElectronicoRemite");

                    b.Property<int?>("TipoMonedaCompra")
                        .HasColumnType("int(11)")
                        .HasColumnName("tipoMonedaCompra");

                    b.Property<int?>("TipoPagoDinero")
                        .HasColumnType("int(11)")
                        .HasColumnName("tipoPagoDinero");

                    b.Property<string>("Titular")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CodBanco" }, "codBanco");

                    b.HasIndex(new[] { "CodPersonaCobranza" }, "codPersonaCobranza");

                    b.HasIndex(new[] { "CodPersonaContactoComercial" }, "codPersonaContactoComercial");

                    b.HasIndex(new[] { "CodPersonaInforFiscal" }, "codPersonaInforFiscal");

                    b.HasIndex(new[] { "CodPersonaRepLegal" }, "codPersonaRepLegal");

                    b.HasIndex(new[] { "CodPersonaSolicita" }, "codPersonaSolicita");

                    b.HasIndex(new[] { "TiempoPago" }, "tiempoPago");

                    b.HasIndex(new[] { "TipoDocElectronicoRemite" }, "tipoDocElectronicoRemite");

                    b.HasIndex(new[] { "TipoMonedaCompra" }, "tipoMonedaCompra");

                    b.HasIndex(new[] { "TipoPagoDinero" }, "tipoPagoDinero");

                    b.ToTable("tb_prov_registro", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbServCabecera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("DescCorto")
                        .HasMaxLength(350)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("desc_corto");

                    b.Property<int?>("IdBtnConoce")
                        .HasColumnType("int(11)")
                        .HasColumnName("idBtnConoce");

                    b.Property<int?>("IdBtnSolicitar")
                        .HasColumnType("int(11)")
                        .HasColumnName("idBtnSolicitar");

                    b.Property<string>("Imagen")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("IsMenu")
                        .HasColumnType("int(11)")
                        .HasComment("true:Esta en el menu, false: No esta en el menu");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdBtnConoce" }, "idBtnConoce");

                    b.HasIndex(new[] { "IdBtnSolicitar" }, "idBtnSolicitar");

                    b.ToTable("tb_serv_cabecera", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbServDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<int?>("IdBtnSolicitalo")
                        .HasColumnType("int(11)")
                        .HasColumnName("idBtnSolicitalo");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int(11)")
                        .HasColumnName("idServicio");

                    b.Property<string>("Subtitulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("subtitulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdBtnSolicitalo" }, "idBtnSolicitalo");

                    b.HasIndex(new[] { "IdServicio" }, "idServicio");

                    b.ToTable("tb_serv_detalle", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbServFormulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("ApellidosNombres")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("apellidosNombres");

                    b.Property<string>("Celular")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("celular");

                    b.Property<string>("CodUbigeo")
                        .HasMaxLength(6)
                        .HasColumnType("char(6)")
                        .HasColumnName("codUbigeo")
                        .IsFixedLength();

                    b.Property<string>("Correo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("correo");

                    b.Property<int?>("IdEstacionamiento")
                        .HasColumnType("int(11)")
                        .HasColumnName("idEstacionamiento");

                    b.Property<int?>("IdServicio")
                        .HasColumnType("int(11)")
                        .HasColumnName("idServicio");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Ruc")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("ruc");

                    b.Property<string>("Telefono")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CodUbigeo" }, "codUbigeo");

                    b.HasIndex(new[] { "IdServicio" }, "idServicio")
                        .HasDatabaseName("idServicio1");

                    b.ToTable("tb_serv_formularios", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbTraPuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int?>("Ocupado")
                        .HasColumnType("int(11)")
                        .HasColumnName("ocupado")
                        .HasComment("0: Sin ocupar; 1: ocupado");

                    b.Property<string>("Requisitos")
                        .HasColumnType("text")
                        .HasColumnName("requisitos");

                    b.Property<string>("Ruta")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ruta");

                    b.Property<string>("Subtitulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("subtitulo");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tb_tra_puestos", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfMenu", b =>
                {
                    b.HasOne("ApiBD.Models.TbConfTipomenu", "IdtipomenuNavigation")
                        .WithMany("TbConfMenus")
                        .HasForeignKey("Idtipomenu")
                        .HasConstraintName("tb_conf_menu_ibfk_1");

                    b.Navigation("IdtipomenuNavigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfPermiso", b =>
                {
                    b.HasOne("ApiBD.Models.TbConfMenu", "Menu")
                        .WithMany("TbConfPermisos")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("tb_conf_permisos_ibfk_1");

                    b.HasOne("ApiBD.Models.TbConfRole", "Rol")
                        .WithMany("TbConfPermisos")
                        .HasForeignKey("RolId")
                        .HasConstraintName("tb_conf_permisos_ibfk_2");

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfUser", b =>
                {
                    b.HasOne("ApiBD.Models.TbConfRole", "Rol")
                        .WithMany("TbConfUsers")
                        .HasForeignKey("RolId")
                        .HasConstraintName("tb_conf_users_ibfk_1");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ApiBD.Models.TbFormContactano", b =>
                {
                    b.HasOne("ApiBD.Models.TbIndServiciodet", "TipoServicioNavigation")
                        .WithMany("TbFormContactanos")
                        .HasForeignKey("TipoServicio")
                        .HasConstraintName("FK_FormContactanos_IndServicioDet");

                    b.Navigation("TipoServicioNavigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbFormCotizano", b =>
                {
                    b.HasOne("ApiBD.Models.TbIndServiciodet", "TipoServicioNavigation")
                        .WithMany("TbFormCotizanos")
                        .HasForeignKey("TipoServicio")
                        .HasConstraintName("FK_FormCotizanos_ServicioCabecera");

                    b.Navigation("TipoServicioNavigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbFormProveedore", b =>
                {
                    b.HasOne("ApiBD.Models.TbConfBanco", "CodCuentaBancariaNavigation")
                        .WithMany("TbFormProveedores")
                        .HasForeignKey("CodCuentaBancaria")
                        .HasConstraintName("FK_tipoBanco");

                    b.Navigation("CodCuentaBancariaNavigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbFormServicio", b =>
                {
                    b.HasOne("ApiBD.Models.TbIndServiciodet", "TipoServicioNavigation")
                        .WithMany("TbFormServicios")
                        .HasForeignKey("TipoServicio")
                        .HasConstraintName("FK_FormServicios_IndServicioDet");

                    b.Navigation("TipoServicioNavigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbIndServiciodet", b =>
                {
                    b.HasOne("ApiBD.Models.TbIndServiciocab", "IdCabNavigation")
                        .WithMany("TbIndServiciodets")
                        .HasForeignKey("IdCab")
                        .HasConstraintName("tb_ind_serviciodet_ibfk_1");

                    b.Navigation("IdCabNavigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbIndSlidecab", b =>
                {
                    b.HasOne("ApiBD.Models.TbConfBotone", "IdBtn1Navigation")
                        .WithMany("TbIndSlidecabs")
                        .HasForeignKey("IdBtn1")
                        .HasConstraintName("tb_ind_slidecab_ibfk_1");

                    b.Navigation("IdBtn1Navigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbProvRegistro", b =>
                {
                    b.HasOne("ApiBD.Models.TbConfBanco", "CodBancoNavigation")
                        .WithMany("TbProvRegistros")
                        .HasForeignKey("CodBanco")
                        .HasConstraintName("tb_prov_registro_ibfk_10");

                    b.HasOne("ApiBD.Models.TbConfPersona", "CodPersonaCobranzaNavigation")
                        .WithMany("TbProvRegistroCodPersonaCobranzaNavigations")
                        .HasForeignKey("CodPersonaCobranza")
                        .HasConstraintName("tb_prov_registro_ibfk_5");

                    b.HasOne("ApiBD.Models.TbConfPersona", "CodPersonaContactoComercialNavigation")
                        .WithMany("TbProvRegistroCodPersonaContactoComercialNavigations")
                        .HasForeignKey("CodPersonaContactoComercial")
                        .HasConstraintName("tb_prov_registro_ibfk_4");

                    b.HasOne("ApiBD.Models.TbConfPersona", "CodPersonaInforFiscalNavigation")
                        .WithMany("TbProvRegistroCodPersonaInforFiscalNavigations")
                        .HasForeignKey("CodPersonaInforFiscal")
                        .HasConstraintName("tb_prov_registro_ibfk_2");

                    b.HasOne("ApiBD.Models.TbConfPersona", "CodPersonaRepLegalNavigation")
                        .WithMany("TbProvRegistroCodPersonaRepLegalNavigations")
                        .HasForeignKey("CodPersonaRepLegal")
                        .HasConstraintName("tb_prov_registro_ibfk_3");

                    b.HasOne("ApiBD.Models.TbConfPersona", "CodPersonaSolicitaNavigation")
                        .WithMany("TbProvRegistroCodPersonaSolicitaNavigations")
                        .HasForeignKey("CodPersonaSolicita")
                        .HasConstraintName("tb_prov_registro_ibfk_1");

                    b.HasOne("ApiBD.Models.TbConfTimepago", "TiempoPagoNavigation")
                        .WithMany("TbProvRegistros")
                        .HasForeignKey("TiempoPago")
                        .HasConstraintName("tb_prov_registro_ibfk_7");

                    b.HasOne("ApiBD.Models.TbConfDocelectronico", "TipoDocElectronicoRemiteNavigation")
                        .WithMany("TbProvRegistros")
                        .HasForeignKey("TipoDocElectronicoRemite")
                        .HasConstraintName("tb_prov_registro_ibfk_8");

                    b.HasOne("ApiBD.Models.TbConfMonedum", "TipoMonedaCompraNavigation")
                        .WithMany("TbProvRegistros")
                        .HasForeignKey("TipoMonedaCompra")
                        .HasConstraintName("tb_prov_registro_ibfk_6");

                    b.HasOne("ApiBD.Models.TbConfTipopago", "TipoPagoDineroNavigation")
                        .WithMany("TbProvRegistros")
                        .HasForeignKey("TipoPagoDinero")
                        .HasConstraintName("tb_prov_registro_ibfk_9");

                    b.Navigation("CodBancoNavigation");

                    b.Navigation("CodPersonaCobranzaNavigation");

                    b.Navigation("CodPersonaContactoComercialNavigation");

                    b.Navigation("CodPersonaInforFiscalNavigation");

                    b.Navigation("CodPersonaRepLegalNavigation");

                    b.Navigation("CodPersonaSolicitaNavigation");

                    b.Navigation("TiempoPagoNavigation");

                    b.Navigation("TipoDocElectronicoRemiteNavigation");

                    b.Navigation("TipoMonedaCompraNavigation");

                    b.Navigation("TipoPagoDineroNavigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbServCabecera", b =>
                {
                    b.HasOne("ApiBD.Models.TbConfBotone", "IdBtnConoceNavigation")
                        .WithMany("TbServCabeceraIdBtnConoceNavigations")
                        .HasForeignKey("IdBtnConoce")
                        .HasConstraintName("tb_serv_cabecera_ibfk_2");

                    b.HasOne("ApiBD.Models.TbConfBotone", "IdBtnSolicitarNavigation")
                        .WithMany("TbServCabeceraIdBtnSolicitarNavigations")
                        .HasForeignKey("IdBtnSolicitar")
                        .HasConstraintName("tb_serv_cabecera_ibfk_1");

                    b.Navigation("IdBtnConoceNavigation");

                    b.Navigation("IdBtnSolicitarNavigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbServDetalle", b =>
                {
                    b.HasOne("ApiBD.Models.TbConfBotone", "IdBtnSolicitaloNavigation")
                        .WithMany("TbServDetalles")
                        .HasForeignKey("IdBtnSolicitalo")
                        .HasConstraintName("tb_serv_detalle_ibfk_2");

                    b.HasOne("ApiBD.Models.TbServCabecera", "IdServicioNavigation")
                        .WithMany("TbServDetalles")
                        .HasForeignKey("IdServicio")
                        .IsRequired()
                        .HasConstraintName("tb_serv_detalle_ibfk_1");

                    b.Navigation("IdBtnSolicitaloNavigation");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbServFormulario", b =>
                {
                    b.HasOne("ApiBD.Models.TbServCabecera", "IdServicioNavigation")
                        .WithMany("TbServFormularios")
                        .HasForeignKey("IdServicio")
                        .HasConstraintName("tb_serv_formularios_ibfk_1");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfBanco", b =>
                {
                    b.Navigation("TbFormProveedores");

                    b.Navigation("TbProvRegistros");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfBotone", b =>
                {
                    b.Navigation("TbIndSlidecabs");

                    b.Navigation("TbServCabeceraIdBtnConoceNavigations");

                    b.Navigation("TbServCabeceraIdBtnSolicitarNavigations");

                    b.Navigation("TbServDetalles");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfDocelectronico", b =>
                {
                    b.Navigation("TbProvRegistros");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfMenu", b =>
                {
                    b.Navigation("TbConfPermisos");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfMonedum", b =>
                {
                    b.Navigation("TbProvRegistros");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfPersona", b =>
                {
                    b.Navigation("TbProvRegistroCodPersonaCobranzaNavigations");

                    b.Navigation("TbProvRegistroCodPersonaContactoComercialNavigations");

                    b.Navigation("TbProvRegistroCodPersonaInforFiscalNavigations");

                    b.Navigation("TbProvRegistroCodPersonaRepLegalNavigations");

                    b.Navigation("TbProvRegistroCodPersonaSolicitaNavigations");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfRole", b =>
                {
                    b.Navigation("TbConfPermisos");

                    b.Navigation("TbConfUsers");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfTimepago", b =>
                {
                    b.Navigation("TbProvRegistros");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfTipomenu", b =>
                {
                    b.Navigation("TbConfMenus");
                });

            modelBuilder.Entity("ApiBD.Models.TbConfTipopago", b =>
                {
                    b.Navigation("TbProvRegistros");
                });

            modelBuilder.Entity("ApiBD.Models.TbIndServiciocab", b =>
                {
                    b.Navigation("TbIndServiciodets");
                });

            modelBuilder.Entity("ApiBD.Models.TbIndServiciodet", b =>
                {
                    b.Navigation("TbFormContactanos");

                    b.Navigation("TbFormCotizanos");

                    b.Navigation("TbFormServicios");
                });

            modelBuilder.Entity("ApiBD.Models.TbServCabecera", b =>
                {
                    b.Navigation("TbServDetalles");

                    b.Navigation("TbServFormularios");
                });
#pragma warning restore 612, 618
        }
    }
}
